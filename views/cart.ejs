<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<style>
    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
}

/* Navbar */
.navbar {
    background-color: #fff; 
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
}

.logo {
    font-size: 1.8rem;
    font-weight: bold;
    color: #f4b000;
    margin-left: 20px;
}

.navbar .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.navbar ul {
    list-style: none;
    display: flex;
}

.navbar ul li {
    margin: 0 10px;
    margin-right: 20px;
}

.navbar ul li a {
    color: #000; /* Black links */
    text-decoration: none;
    font-weight: 500;
    font-size: 1rem;
    transition: color 0.3s;
}

.navbar ul li a:hover {
    color: #f4b000; /* Highlighted color */
}

.cart-item {
    display: flex;
    align-items: center;
    position: relative;
}

.cart-icon {
    height: 30px;
    margin-right: 5px;
}
    /* Button Styling */
button {
    background-color: #f4b000;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
}

button:hover {
    background-color: #f4b000;
}

.decrease-qty,
.increase-qty {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    margin: 0 5px;
}

img{
    height: 400px;
    width: 400px;
}

.remove-item {
    background-color: #dc3545;
}

.remove-item:hover {
    background-color: #c82333;
}

/* Table Layout for Buttons */
td {
    display: flex;
    align-items: center;
    justify-content: center;
}
.quantity {
    font-size: 18px;
    font-weight: bold;
    margin: 0 10px;
}

</style>

<body>

    <header class="navbar">
        <div class="container">
            <div class="logo">KAYAA</div>
            <nav>
                <ul>
                    <li><a href="home.html">Home</a></li>
                    <li><a href="/products">Products</a></li>
                    <li><a href="blog.html">Blog</a></li>
                    <li><a href="#">About Us</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <table>
        <tbody>
            <% if (cart.length === 0) { %>
                <tr>
                    <td colspan="5" class="empty-cart">Your cart is empty.</td>
                </tr>
            <% } else { %>
                <% cart.forEach(item => { %>
                    <tr data-id="<%= item._id %>">
                        <td>
                            <img src="<%= item.imageUrl %>" alt="<%= item.title %>" class="cart-image">
                        </td>
                        <td class="cart-title"><%= item.title %></td>
                        <td>
                            <button class="decrease-qty">-</button>
                            <span class="quantity"><%= item.quantity %></span>
                            <button class="increase-qty">+</button>
                        </td>
                        <td class="price">&#8377;<%= (item.price * item.quantity).toFixed(2) %></td>
                        <td>
                            <button class="remove-item">Remove</button>
                        </td>
                    </tr>
                <% }) %>
            <% } %>
        </tbody>
    </table>
    
</body>
<script>
    document.addEventListener('DOMContentLoaded', () => {
    const decreaseButtons = document.querySelectorAll('.decrease-qty');
    const increaseButtons = document.querySelectorAll('.increase-qty');
    const removeButtons = document.querySelectorAll('.remove-item');

    // Handle quantity decrease
    decreaseButtons.forEach(button => {
        button.addEventListener('click', async (e) => {
            const row = e.target.closest('tr');
            const quantityElement = row.querySelector('.quantity');
            const id = row.getAttribute('data-id');
            let quantity = parseInt(quantityElement.textContent);

            if (quantity > 1) {
                quantity--;
                quantityElement.textContent = quantity;

                await updateQuantity(id, quantity);
                updatePrice(row, quantity);
            }
        });
    });

    // Handle quantity increase
    increaseButtons.forEach(button => {
        button.addEventListener('click', async (e) => {
            const row = e.target.closest('tr');
            const quantityElement = row.querySelector('.quantity');
            const id = row.getAttribute('data-id');
            let quantity = parseInt(quantityElement.textContent);

            quantity++;
            quantityElement.textContent = quantity;

            await updateQuantity(id, quantity);
            updatePrice(row, quantity);
        });
    });

    // Remove item
    removeButtons.forEach(button => {
        button.addEventListener('click', async (e) => {
            const row = e.target.closest('tr');
            const id = row.getAttribute('data-id');

            await removeItem(id);
            row.remove();
        });
    });

    // Function to update quantity in the server
    async function updateQuantity(productId, quantity) {
        await fetch('/update-cart', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, quantity }),
        });
    }

    // Function to remove item from the cart
    async function removeItem(productId) {
        await fetch('/remove-from-cart', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId }),
        });
    }

    // Function to update the price in the UI
    function updatePrice(row, quantity) {
        const pricePerItem = parseFloat(row.getAttribute('data-price'));
        const priceElement = row.querySelector('.price');
        priceElement.textContent = `â‚¹${(pricePerItem * quantity).toFixed(2)}`;
    }
});

</script>
</html>